/* General Layout */
.dashboard-container {
    display: flex;
    min-height: 100vh;
}

/* Sidebar Styles */
.sidebar {
    width: 250px;
    background-color: #C8BFE7;
    padding: 20px;
    display: flex;
    flex-direction: column;
    transition: all 0.3s ease;
    position: relative;
}

.logo {
    display: flex;
    align-items: center;
    margin-bottom: 40px;
}

.logo img {
    width: 40px;
    height: 40px;
    margin-right: 10px;
    border-radius: 50%;
}

.logo span {
    font-size: 1.2em;
    font-weight: bold;
    color: #333;
}

.nav-menu {
    flex-grow: 1;
}

.nav-item {
    display: flex;
    align-items: center;
    padding: 12px 15px;
    margin-bottom: 10px;
    color: #333;
    text-decoration: none;
    border-radius: 8px;
    transition: all 0.3s ease;
}

.nav-item i {
    margin-right: 10px;
    width: 20px;
}

.nav-item:hover {
    background-color: rgba(255, 255, 255, 0.5);
    transform: translateX(5px);
}

.nav-item.active {
    background-color: #fff;
    font-weight: bold;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.logout-section {
    margin-top: auto;
    padding-top: 20px;
    display: flex;
    justify-content: center;
    align-items: center;
}

.logout-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    color: #785A96;
    background-color: #fff;
    text-decoration: none;
    padding: 8px 16px;
    border-radius: 20px;
    transition: all 0.3s ease;
    font-weight: 500;
    border: 2px solid #785A96;
    width: fit-content;
    font-size: 0.9em;
}

.logout-btn:hover {
    background-color: #785A96;
    color: #fff;
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.logout-btn i {
    margin-right: 8px;
    font-size: 0.9em;
}

.sidebar-toggle {
    position: absolute;
    right: -15px;
    top: 20px;
    width: 35px;
    height: 35px;
    background-color: #785A96;
    border: 2px solid #fff;
    border-radius: 50%;
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    transition: all 0.3s ease;
    z-index: 100;
    font-size: 1.1em;
}

.sidebar-toggle:hover {
    background-color: #644b7e;
    transform: scale(1.1) rotate(180deg);
    box-shadow: 0 6px 12px rgba(0,0,0,0.3);
}

.sidebar.collapsed {
    width: 70px;
    padding: 10px;
}

.sidebar.collapsed .logo span,
.sidebar.collapsed .nav-item span,
.sidebar.collapsed .logout-btn span {
    display: none !important;
}

.sidebar.collapsed .nav-item,
.sidebar.collapsed .logout-btn {
    font-size: 1.3em;
    justify-content: center;
    padding: 12px;
}

.sidebar.collapsed .nav-item i,
.sidebar.collapsed .logout-btn i {
    margin-right: 0;
    font-size: 1.4em;
}

.sidebar.collapsed .logo img {
    margin-right: 0;
}

.sidebar.collapsed .logo {
    justify-content: center;
}
vconst express = require('express');
const router = express.Router();
const { ensureAuthenticated } = require('../config/auth');
const db = require('../models');
const { Op } = require('sequelize');

// Get settings page
router.get('/', ensureAuthenticated, (req, res) => {
    // Generate user initials from first_name and last_name
    let userInitials = '';
    if (req.user.first_name && req.user.last_name) {
        userInitials = `${req.user.first_name[0]}${req.user.last_name[0]}`.toUpperCase();
    } else {
        userInitials = req.user.email.substring(0, 2).toUpperCase();
    }

    res.render('settings', {
        user: req.user,
        userInitials: userInitials
    });
});

// Delete account
router.delete('/delete-account', ensureAuthenticated, async (req, res) => {
    console.log('Delete account request received for user:', req.user.id);
    
    try {
        // Start transaction
        const t = await db.sequelize.transaction();

        try {
            console.log('Starting deletion process...');

            // Delete all moods
            console.log('Deleting moods...');
            await db.sequelize.query(
                'DELETE FROM "Moods" WHERE "user_id" = ?',
                {
                    replacements: [req.user.id],
                    type: db.sequelize.QueryTypes.DELETE,
                    transaction: t
                }
            );
            console.log('Moods deleted');

            // Delete all entries
            console.log('Deleting entries...');
            await db.sequelize.query(
                'DELETE FROM "Entries" WHERE "user_id" = ?',
                {
                    replacements: [req.user.id],
                    type: db.sequelize.QueryTypes.DELETE,
                    transaction: t
                }
            );
            console.log('Entries deleted');

            // Delete all goals
            console.log('Deleting goals...');
            await db.sequelize.query(
                'DELETE FROM goals WHERE "user_id" = ?',
                {
                    replacements: [req.user.id],
                    type: db.sequelize.QueryTypes.DELETE,
                    transaction: t
                }
            );
            console.log('Goals deleted');

            // Delete all files
            console.log('Deleting files...');
            await db.sequelize.query(
                'DELETE FROM "Files" WHERE "user_id" = ?',
                {
                    replacements: [req.user.id],
                    type: db.sequelize.QueryTypes.DELETE,
                    transaction: t
                }
            );
            console.log('Files deleted');

            // Delete the user
            console.log('Deleting user...');
            await db.sequelize.query(
                'DELETE FROM "Users" WHERE id = ?',
                {
                    replacements: [req.user.id],
                    type: db.sequelize.QueryTypes.DELETE,
                    transaction: t
                }
            );
            console.log('User deleted');

            // Commit transaction
            await t.commit();
            console.log('Transaction committed successfully');

            // Clear the session
            req.logout((err) => {
                if (err) {
                    console.error('Error during logout:', err);
                }
                req.flash('success_msg', 'Your account has been successfully deleted');
                res.redirect('/users/login');
            });
        } catch (error) {
            // Rollback transaction on error
            await t.rollback();
            console.error('Error details:', error);
            throw error;
        }
    } catch (error) {
        console.error('Error in delete account process:', error);
        req.flash('error_msg', 'Failed to delete account: ' + error.message);
        res.redirect('/settings');
    }
});

module.exports = router; 
/* Modal Styles */
.modal {
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.5); /* Dim background */
    display: flex; /* Used to center the modal content */
    align-items: center; /* Vertically center */
    justify-content: center; /* Horizontally center */
}

.modal-content {
    background-color: #fff;
    margin: auto;
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    width: 90%;
    max-width: 500px; /* Max width of the modal */
    text-align: center;
    position: relative; /* For positioning the close button */
}

.close-button {
    color: #aaa;
    position: absolute;
    top: 15px;
    right: 20px;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
}

.close-button:hover,
.close-button:focus {
    color: #333;
    text-decoration: none;
}

.modal-content h2 {
    color: #333;
    margin-top: 0;
    margin-bottom: 15px;
    font-size: 1.8rem;
}

.modal-content p {
    color: #555;
    font-size: 1rem;
    line-height: 1.6;
    margin-bottom: 25px;
}

.modal-actions {
    display: flex;
    justify-content: center; /* Center buttons */
    gap: 15px; /* Space between buttons */
}

.modal-actions button {
    padding: 12px 25px;
    border: none;
    border-radius: 8px;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease;
}

.modal-actions .btn-cancel {
    background-color: #f0f0f0;
    color: #333;
    border: 1px solid #ddd;
}

.modal-actions .btn-cancel:hover {
    background-color: #e0e0e0;
}

.modal-actions .btn-confirm-delete {
    background-color: #d32f2f; /* Red for delete */
    color: white;
}

.modal-actions .btn-confirm-delete:hover {
    background-color: #b71c1c; /* Darker red on hover */
}

.modal-actions button:active {
    transform: translateY(1px); /* Slight press effect */
}