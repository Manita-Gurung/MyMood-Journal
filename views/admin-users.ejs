<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Management - MyMood Journal</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        :root {
            --sidebar-color: #C8BFE7;
            --main-color: #8B4FFF;
            --header-color: #785A96;
            --text-primary: #2C3E50;
            --text-secondary: #5D6D7E;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            display: flex;
            min-height: 100vh;
        }

        .sidebar {
            width: 250px;
            background-color: var(--sidebar-color);
            padding: 20px;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
            position: fixed;
            left: 0;
            top: 0;
        }

        .logo {
            display: flex;
            align-items: center;
            margin-bottom: 40px;
        }

        .logo img {
            width: 40px;
            height: 40px;
            margin-right: 10px;
            border-radius: 50%;
        }

        .logo span {
            font-size: 1.2em;
            font-weight: bold;
            color: var(--text-primary);
        }

        .nav-menu {
            flex-grow: 1;
        }

        .nav-item {
            display: flex;
            align-items: center;
            padding: 12px 15px;
            margin-bottom: 10px;
            color: var(--text-primary);
            text-decoration: none;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .nav-item i {
            margin-right: 10px;
            width: 20px;
        }

        .nav-item:hover {
            background-color: rgba(255, 255, 255, 0.5);
            transform: translateX(5px);
        }

        .nav-item.active {
            background-color: #fff;
            font-weight: bold;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .logout-section {
            margin-top: auto;
            padding-top: 20px;
            display: flex;
            justify-content: center;
        }

        .logout-btn {
            display: flex;
            align-items: center;
            color: var(--header-color);
            text-decoration: none;
            padding: 8px 16px;
            border-radius: 20px;
            transition: all 0.3s ease;
            background-color: #fff;
            border: 2px solid var(--header-color);
        }

        .logout-btn:hover {
            background-color: var(--header-color);
            color: #fff;
        }

        .logout-btn i {
            margin-right: 8px;
        }

        .main-content {
            margin-left: 250px;
            padding: 20px;
            flex: 1;
            background-color: #fff;
        }

        .page-header {
            margin-bottom: 30px;
            border-bottom: 2px solid var(--header-color);
            padding-bottom: 10px;
        }

        .page-header h1 {
            color: var(--header-color);
            font-size: 24px;
        }

        .users-container {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .filters {
            display: flex;
            gap: 15px;
            margin-bottom: 20px;
            padding: 15px;
            background-color: #f8f9fa;
            border-radius: 8px;
        }

        .search-box {
            flex: 1;
            position: relative;
        }

        .search-box input {
            width: 100%;
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            padding-left: 35px;
        }

        .search-box i {
            position: absolute;
            left: 12px;
            top: 50%;
            transform: translateY(-50%);
            color: #666;
        }

        .filter-dropdown {
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            background-color: white;
        }

        .users-table {
            width: 100%;
            border-collapse: collapse;
        }

        .users-table th,
        .users-table td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .users-table th {
            background-color: #f8f9fa;
            color: var(--text-primary);
            font-weight: bold;
        }

        .users-table tr:hover {
            background-color: #f8f9fa;
        }

        .status-badge {
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.85em;
        }

        .status-badge.admin {
            background-color: #e3f2fd;
            color: #1976d2;
        }

        .status-badge.active {
            background-color: #e8f5e9;
            color: #2e7d32;
        }

        .action-btn {
            padding: 6px 12px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9em;
            transition: all 0.3s ease;
        }

        .edit-btn {
            background-color: var(--main-color);
            color: white;
            margin-right: 8px;
        }

        .delete-btn {
            background-color: #dc3545;
            color: white;
        }

        .action-btn:hover {
            opacity: 0.9;
        }

        .pagination {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-top: 20px;
            padding: 20px 0;
        }

        .pagination button {
            padding: 8px 12px;
            border: 1px solid #ddd;
            background-color: white;
            cursor: pointer;
            border-radius: 4px;
        }

        .pagination button.active {
            background-color: var(--main-color);
            color: white;
            border-color: var(--main-color);
        }

        .pagination button:hover:not(.active) {
            background-color: #f8f9fa;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
        }

        .modal-content {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            width: 400px;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .close {
            cursor: pointer;
            font-size: 1.5em;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            color: var(--text-primary);
        }

        .form-group input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .modal-actions {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
        <div class="sidebar">
            <div class="logo">
            <img src="/images/logo.png" alt="MyMood Journal">
            <span>MyMood Journal</span>
            </div>
        
        <nav class="nav-menu">
            <a href="/dashboard" class="nav-item">
                <i class="fas fa-home"></i>
                    Dashboard
                </a>
            <a href="/journals" class="nav-item">
                <i class="fas fa-book"></i>
                    Journals
                </a>
            <a href="/goals" class="nav-item">
                <i class="fas fa-bullseye"></i>
                Goals
            </a>
            <a href="/calendar" class="nav-item">
                <i class="fas fa-calendar"></i>
                Calendar
            </a>
            <a href="/admin/users" class="nav-item active">
                <i class="fas fa-users"></i>
                User Management
            </a>
            <a href="/settings" class="nav-item">
                <i class="fas fa-cog"></i>
                    Settings
                </a>
            </nav>

        <div class="logout-section">
            <a href="/users/logout" class="logout-btn">
                <i class="fas fa-sign-out-alt"></i>
                Logout
            </a>
        </div>
        </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="page-header">
                <h1>User Management</h1>
            </div>

        <div class="users-container">
            <div class="filters">
                <div class="search-box">
                    <i class="fas fa-search"></i>
                    <input type="text" id="searchInput" placeholder="Search users...">
                </div>
                <select class="filter-dropdown" id="statusFilter">
                    <option value="all">All Users</option>
                    <option value="active">Active Users</option>
                    <option value="admin">Admins</option>
                    </select>
                <select class="filter-dropdown" id="sortBy">
                        <option value="date-joined">Date Joined</option>
                        <option value="last-active">Last Active</option>
                    </select>
            </div>

            <table class="users-table">
                    <thead>
                        <tr>
                            <th>Username</th>
                            <th>Email</th>
                        <th>Status</th>
                            <th>Date Joined</th>
                            <th>Last Active</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                <tbody id="usersTableBody">
                    <% users.forEach(user => { %>
                        <tr data-user-id="<%= user.id %>">
                            <td class="username"><%= user.username %></td>
                            <td class="email"><%= user.email %></td>
                            <td>
                                <span class="status-badge <%= user.status.toLowerCase() %>">
                                    <%= user.status %>
                                </span>
                            </td>
                            <td><%= new Date(user.createdAt).toLocaleDateString() %></td>
                            <td><%= new Date(user.lastActive).toLocaleDateString() %></td>
                            <td>
                                <button class="action-btn edit-btn" onclick="editUser('<%= user.id %>')">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="action-btn delete-btn" onclick="deleteUser('<%= user.id %>')">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </td>
                        </tr>
                        <% }); %>
                    </tbody>
                </table>

            <div class="pagination">
                    <% for(let i = 1; i <= totalPages; i++) { %>
                    <button class="<%= currentPage === i ? 'active' : '' %>" 
                            onclick="changePage(<%= i %>)">
                        <%= i %>
                    </button>
                    <% } %>
            </div>
        </div>
    </div>

    <!-- Edit User Modal -->
    <div id="editUserModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Edit User</h2>
                <span class="close">&times;</span>
            </div>
            <form id="editUserForm">
                <input type="hidden" id="editUserId">
                <div class="form-group">
                    <label for="editUsername">Username</label>
                    <input type="text" id="editUsername" required>
                </div>
                <div class="form-group">
                    <label for="editEmail">Email</label>
                    <input type="email" id="editEmail" required>
                </div>
                <div class="form-group">
                    <label for="editStatus">Status</label>
                    <select id="editStatus" class="filter-dropdown">
                        <option value="active">Active</option>
                        <option value="admin">Admin</option>
                    </select>
                </div>
                <div class="modal-actions">
                    <button type="button" class="action-btn" onclick="closeEditModal()">Cancel</button>
                    <button type="submit" class="action-btn edit-btn">Save Changes</button>
                </div>
            </form>
            </div>
    </div>

    <script>
        // Search functionality
        document.getElementById('searchInput').addEventListener('input', function(e) {
            const searchTerm = e.target.value;
            filterUsers(searchTerm, document.getElementById('statusFilter').value);
        });

        // Status filter
        document.getElementById('statusFilter').addEventListener('change', function(e) {
            const status = e.target.value;
            filterUsers(document.getElementById('searchInput').value, status);
        });

        // Sort functionality
        document.getElementById('sortBy').addEventListener('change', function(e) {
            const sortBy = e.target.value;
            sortUsers(sortBy);
        });

        // Filter users function
        function filterUsers(search, status) {
            fetch(`/admin/api/users/filter?search=${search}&status=${status}`)
                .then(response => response.json())
                .then(data => {
                    updateUsersTable(data.users);
                })
                .catch(error => console.error('Error:', error));
        }

        // Sort users function
        function sortUsers(sortBy) {
            fetch(`/admin/api/users/sort?sortBy=${sortBy}`)
                .then(response => response.json())
                .then(data => {
                    updateUsersTable(data.users);
                })
                .catch(error => console.error('Error:', error));
        }

        // Update users table
        function updateUsersTable(users) {
            const tbody = document.getElementById('usersTableBody');
            tbody.innerHTML = '';
            
            users.forEach(user => {
                const row = `
                    <tr data-user-id="${user.id}">
                        <td class="username">${user.username}</td>
                        <td class="email">${user.email}</td>
                        <td>
                            <span class="status-badge ${user.status.toLowerCase()}">
                                ${user.status}
                            </span>
                        </td>
                        <td>${new Date(user.createdAt).toLocaleDateString()}</td>
                        <td>${new Date(user.lastActive).toLocaleDateString()}</td>
                        <td>
                            <button class="action-btn edit-btn" onclick="editUser('${user.id}')">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="action-btn delete-btn" onclick="deleteUser('${user.id}')">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                `;
                tbody.innerHTML += row;
            });
        }

        // Edit user functions
        function editUser(userId) {
            event.preventDefault(); // Prevent default behavior
            // Fetch user details and populate modal
            fetch(`/admin/api/users/${userId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to fetch user details');
                    }
                    return response.json();
                })
                .then(user => {
                    document.getElementById('editUserId').value = user.id;
                    document.getElementById('editUsername').value = user.username || '';
                    document.getElementById('editEmail').value = user.email || '';
                    document.getElementById('editStatus').value = user.status.toLowerCase();
                    document.getElementById('editUserModal').style.display = 'block';
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Failed to load user details. Please try again.');
                });
        }

        function closeEditModal() {
            document.getElementById('editUserModal').style.display = 'none';
        }

        // Close modal when clicking the X button
        document.querySelector('.close').addEventListener('click', closeEditModal);

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('editUserModal');
            if (event.target === modal) {
                closeEditModal();
            }
        }

        // Handle edit user form submission
        document.getElementById('editUserForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const userId = document.getElementById('editUserId').value;
            const userData = {
                username: document.getElementById('editUsername').value,
                email: document.getElementById('editEmail').value,
                status: document.getElementById('editStatus').value
            };

            fetch(`/admin/api/users/${userId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(userData)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Failed to update user');
                }
                return response.json();
            })
            .then(data => {
                if (data.message) {
                    closeEditModal();
                    // Update the table row instead of reloading
                    const row = document.querySelector(`tr[data-user-id="${userId}"]`);
                    if (row) {
                        row.querySelector('.username').textContent = userData.username;
                        row.querySelector('.email').textContent = userData.email;
                        row.querySelector('.status-badge').textContent = userData.status === 'admin' ? 'Admin' : 'Active';
                        row.querySelector('.status-badge').className = `status-badge ${userData.status.toLowerCase()}`;
                    }
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Failed to update user. Please try again.');
            });
        });

        // Delete user function
        function deleteUser(userId) {
            if (confirm('Are you sure you want to delete this user?')) {
                fetch(`/admin/api/users/${userId}`, {
                    method: 'DELETE'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.message) {
                        // Refresh the users list
                        location.reload();
                    }
                })
                .catch(error => console.error('Error:', error));
            }
        }

        // Pagination function
        function changePage(page) {
            window.location.href = `/admin/users?page=${page}`;
        }
    </script>
</body>
</html>