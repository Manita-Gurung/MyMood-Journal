<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - MyMood Journal</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="/css/admin.css">
</head>
<body>
    <div class="admin-container">
        <!-- Header -->
        <header class="admin-header">
            <div class="logo">
                <img src="/images/logo.png" alt="MyMood Journal Logo">
            </div>
            <div class="logo-text">
                <span class="title">Dashboard Overview</span>
                <span class="subtitle">Key metrics and insights</span>
            </div>
            <button class="refresh-data-btn" onclick="refreshDashboardData()">
                <i class="fas fa-sync-alt"></i> Refresh Data
            </button>
            <a href="/admin/logout" class="admin-logout-btn">
                <i class="fas fa-sign-out-alt"></i> Logout
            </a>
        </header>

        <!-- Stats Grid -->
        <div class="stats-grid">
            <div class="stat-card total-users">
                <div class="icon"><i class="fas fa-users"></i></div>
                <div class="info">
                    <h3>TOTAL REGISTERED USERS</h3>
                    <p class="number"><%= stats.totalUsers %></p>
                    <p class="trend positive"><i class="fas fa-arrow-up"></i> <%= stats.userGrowthPercentage %>% this week</p>
                </div>
            </div>
            <div class="stat-card active-users">
                <div class="icon"><i class="fas fa-user-clock"></i></div>
                <div class="info">
                    <h3>ACTIVE USERS (LAST 7 DAYS)</h3>
                    <p class="number"><%= stats.activeUsers %></p>
                    <p class="trend positive"><i class="fas fa-arrow-up"></i> <%= stats.activeUsersRetention %>% retention</p>
                </div>
            </div>
            <div class="stat-card journal-entries">
                <div class="icon"><i class="fas fa-book-open"></i></div>
                <div class="info">
                    <h3>JOURNAL ENTRIES TODAY</h3>
                    <p class="number"><%= stats.entriesToday %></p>
                    <p class="trend positive"><i class="fas fa-arrow-up"></i> <%= stats.avgEntriesPerUser %> avg per user</p>
                </div>
            </div>
        </div>
        <p class="last-updated">Last updated: <%= new Date().toLocaleString() %></p>

        <!-- User Management Section -->
        <section class="user-management-section">
            <div class="user-management-header">
                <a href="/admin/dashboard" class="back-arrow"><i class="fas fa-arrow-left"></i></a>
                <div class="title-group">
                    <h2>User Management</h2>
                    <p>Manage user accounts and permissions</p>
                </div>
            </div>

            <div class="privacy-notice">
                <i class="fas fa-shield-alt"></i>
                Privacy Notice: Admin cannot view, edit, or access users' journal entries. Only account management is permitted.
            </div>

            <div class="user-filters">
                <div class="search-bar">
                    <i class="fas fa-search"></i>
                    <input type="text" id="userSearchInput" placeholder="Search by username or email...">
                </div>
                <div class="filter-dropdown">
                    <select id="statusFilter">
                        <option value="all">All Status</option>
                        <option value="active">Active</option>
                        <option value="inactive">Inactive</option> <!-- Assuming you might have this status -->
                        <option value="admin">Admin</option>
                    </select>
                </div>
                <div class="filter-dropdown">
                    <select id="dateJoinedFilter">
                        <option value="any">Date Joined (Any)</option>
                        <option value="today">Today</option>
                        <option value="this_week">This Week</option>
                        <option value="this_month">This Month</option>
                    </select>
                </div>
                <div class="sort-dropdown">
                    <button id="sortButton"><i class="fas fa-sort-amount-down"></i></button>
                    <!-- Add dropdown logic for sort options here if needed -->
                </div>
            </div>

            <table class="users-table">
                <thead>
                    <tr>
                        <th>Username</th>
                        <th>Email</th>
                        <th>Date Joined</th>
                        <th>Status</th>
                        <th>Last Updated</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="usersTableBody">
                    <% users.forEach(user => { %>
                        <tr data-user-id="<%= user.id %>">
                            <td class="username-cell"><i class="fas fa-user-circle"></i><%= user.username %></td>
                            <td><%= user.email %></td>
                            <td><%= new Date(user.createdAt).toLocaleDateString() %></td>
                            <td><span class="status-badge <%= user.isAdmin ? 'admin' : (user.isActive ? 'active' : 'inactive') %>"><%= user.isAdmin ? 'Admin' : (user.isActive ? 'Active' : 'Inactive') %></span></td>
                            <td><%= user.updatedAt ? new Date(user.updatedAt).toLocaleString() : 'N/A' %></td>
                            <td class="action-icons">
                                <button class="lock-user-btn" title="Toggle Lock/Admin Status"><i class="fas fa-lock"></i></button>
                                <button class="delete-user-btn" title="Delete User"><i class="fas fa-trash-alt"></i></button>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>

            <div class="pagination-container">
                <span id="paginationInfo">Showing <%= pagination.startIndex + 1 %> to <%= pagination.endIndex %> of <%= pagination.totalUsers %> users</span>
                <div class="pagination-buttons">
                    <% if (pagination.currentPage > 1) { %>
                        <button onclick="changePage(<%= pagination.currentPage - 1 %>)">Previous</button>
                    <% } %>
                    <% for (let i = 1; i <= pagination.totalPages; i++) { %>
                        <button class="<%= i === pagination.currentPage ? 'active' : '' %>" onclick="changePage(<%= i %>)"><%= i %></button>
                    <% } %>
                    <% if (pagination.currentPage < pagination.totalPages) { %>
                        <button onclick="changePage(<%= pagination.currentPage + 1 %>)">Next</button>
                    <% } %>
                </div>
            </div>
        </section>
    </div>

    <script>
        // Basic JS for interactivity - expand as needed
        function refreshDashboardData() {
            console.log('Refreshing data...');
            // Add actual data refresh logic here, e.g., via fetch
            window.location.reload(); // Simple reload for now
        }

        function changePage(page) {
            // Update URL to navigate to the new page, preserving filters if any
            const currentUrl = new URL(window.location.href);
            currentUrl.searchParams.set('page', page);
            window.location.href = currentUrl.toString();
        }

        document.addEventListener('DOMContentLoaded', () => {
            const searchInput = document.getElementById('userSearchInput');
            searchInput.addEventListener('keypress', function(event) {
                if (event.key === 'Enter') {
                    const searchTerm = searchInput.value;
                    const currentUrl = new URL(window.location.href);
                    currentUrl.searchParams.set('search', searchTerm);
                    currentUrl.searchParams.set('page', 1); // Reset to page 1 for new search
                    window.location.href = currentUrl.toString();
                }
            });

            // Add event listeners for status and date filters to reload with query params
            document.getElementById('statusFilter').addEventListener('change', function() {
                const status = this.value;
                const currentUrl = new URL(window.location.href);
                currentUrl.searchParams.set('status', status);
                currentUrl.search_params.set('page', 1);
                window.location.href = currentUrl.toString();
            });

            document.getElementById('dateJoinedFilter').addEventListener('change', function() {
                const dateJoined = this.value;
                const currentUrl = new URL(window.location.href);
                currentUrl.searchParams.set('dateJoined', dateJoined);
                currentUrl.searchParams.set('page', 1);
                window.location.href = currentUrl.toString();
            });

            // Event listeners for action buttons (lock, delete) - to be implemented with API calls
            document.querySelectorAll('.lock-user-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const userId = this.closest('tr').dataset.userId;
                    console.log(`Lock/Unlock user ${userId}`);
                    // Implement API call to toggle user status (isAdmin or a new isLocked field)
                });
            });

            document.querySelectorAll('.delete-user-btn').forEach(button => {
                button.addEventListener('click', function(event) {
                    event.preventDefault();
                    const userId = this.closest('tr').dataset.userId;
                    if (confirm('Are you sure you want to delete this user?')) {
                        console.log(`Attempting to delete user ${userId}`);
                        fetch(`/admin/api/users/${userId}`, { 
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                        .then(response => {
                            if (!response.ok) {
                                return response.json().then(err => { 
                                    throw new Error(err.message || 'Failed to delete user. Status: ' + response.status);
                                });
                            }
                            return response.json();
                        })
                        .then(data => {
                            console.log('User deleted successfully:', data);
                            alert(data.message || 'User deleted successfully!');
                            window.location.reload();
                        })
                        .catch(error => {
                            console.error('Error deleting user:', error);
                            alert('Error deleting user: ' + error.message);
                        });
                    }
                });
            });
        });
    </script>
</body>
</html>